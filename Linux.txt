most important commands
==============================================================================================================================================
1- useradd -u name1 name2  --> create new user(name2) and give to it name1's directory
2- pwconv & pwunconv -- grpconv & grpunconv --> add or remove shadowing from users and groups
3- passwd -L/U name --> active or deactive name
4- useradd -d /my_home_directory -m -g main_grop -G additional_group -s bash_address -c comment -p password name --> add new user
5- cut -d(-c 10 --> 10th carater) "column" -f number_of_column name --> cut part of file
6- join A B --> concat B to A
7- paste A B --> concat A to B line by line
8- dd if=/dev/zero of=/file.txt bs=(valume M or ...) count=(count) --> build a file with count block that each has valume of valume
9- nslookup site --> give DNS and IPv4 address
10- host site --> give DNS and IPv4 address and IPv6 address
11- dig @DNS_server var site --> give DNS and IPv4 address and IPv6 address and more details  --> var = A -- FQDN -> IPv4 / AAAA FQDN -> IPv6 / MX -> main server / PTR -- IP -> FQDN 
12- systemctl status/start/stop firewalld --> check firewall or start or stop it
13- firewall-cmd --list-ports/services/all --> show port and service and all
14- firewall-cmd --remove/add-ports/services=sshd --> remove or add port and service (for example sshd or 22/tcp)
15- firewall-cmd --reload --> delete config that not permanent
16- firewall-cmd --permanent --> permanent the config
17- firewall-cmd --permanent --add-port=22/tcp --> add port at permanent (for example 22/tco )
18- ufw status/enable--> check firewall or start it
19- ufw allow 22/tcp --> add port (for example 22/tco )
20- ufw delete number_of_line --> delete one line according to ufw status
21- ufd reset --> delete all list and disable the firewall
22- see ports --> netstat/ss -ntulp
23- change port of ssh --> vi /etc/ssh/sshd_config
24- ssh --> ssh root@IP (-p port_number)
25- change IP in Cen_OS on command --> vi /etc/sysconfig/network-scripts/ifcfg-enp0s3(interface)
26- search namr packet --> apt-cache search server | grep name
27- check exist package --> dpkg -l | grep name
28- show upgradable list --> apt list upgradable 
29- remove a app with config --> apt remove --purge name
30- change defaut gateway --> vi /etc/netplan/00-installer-config.yaml --> insert IP --> netplan apply
31- install vm-tools --> sudo apt-get install open-vm-tools_* -y





Install v2ray on ubuntu 
==============================================================================================================================================
1- download nekoray app --> https://v2.hysteria.network/docs/getting-started/Installation/
2- type this --> sudo apt install libxcb-xinerama0 libqt5core5a libqt5gui5 libqt5network5 libqt5widgets5 libqt5svg5 libqt5x11extras5
3- dpkg -i nekoray-3.26-2023-12-09-debian-x64.deb





ssh with key
==============================================================================================================================================
1- on Cent_OS --> ssh-keygen --> give it a password
2- in /.ssh 2 file created --> move a public key to ubuntu
2- ssh-copy-id (-p port_number) -i ./name_key.pub root@IP 
4- in ubuntu and in /.ssh you see the key and now you can ssh to Cent_OS without password   





quota --> limited user for use the partitions
==============================================================================================================================================
1- apt-get install quota
2- in /etc/fstab and in line of partition --> after defaults --> defaults,usrquota,grpquota
3- umount and mount the partition 
4- quotaoff -a
5- quotacheck -cug /dev/your_partition
6- edquota -u username
7- insert value --> you can add rules on blocks or inodes --> soft=if you achieve to this you get alarm to remove the extra data and if you don't this for 7days your data has deleted hard=you don't save data more than this value  





DNS-Server
==============================================================================================================================================
1- for Ubuntu --> install bind9 bind9utils  and for CentOS --> yum install bind bind_utils
2- Active Cach Server --> /etc/bind/named.conf.options --> at the end of {} --> type : recursion yes; 
3- check bind9 --> systemctl status bind9 and restart bind9 --> systemctl restart bind9





# Create Web Server 
4- vi /etc/bind/named.conf.local --> at the end of that, type this :
zone "name" {
type master;
file "/etc/bind/name_of_database";
};
5- write this in database :
$TTL	number  # time for cash record
@	IN	SOA	name_of_zone.	root.name_of_zone. (	#root refer to responsible person
	number	#serial -- after each change --> increase this
	number	#what time per second for request to server
	number	#time for if server was busy repeate send request
	number	#time for expiertion
	number	#time for save in cashe
)
@	IN	NS	ns1.name_of_zone.	#for webserver
ns1.name_of_zone.	IN	A	Server_IP	#server_IP
site	IN	A	IP #add more record
6- check your code --> rndc reload
7- systemctl restart bind9 and systemctl status bind9





# Create a Reverse Zone 
8- vi /etc/bind/named.conf.local --> at the end of that, type this :
zone "56.168.192.in-addr.arpa" {	#IP is reverse --> 192.168.56.0 --> 56.168.192
type master;
file "/etc/bind/name_of_database";
};
9- write this in database :
$TTL	number  # time for cash record
@	IN	SOA	name_of_zone.	root.name_of_zone. (	#root refer to responsible person
	number	#serial -- after each change --> increase this
	number	#what time per second for request to server
	number	#time for if server was busy repeate send request
	number	#time for expiertion
	number	#time for save in cashe
)
@	IN	NS	ns1.name_of_zone.	#for webserver
End_of_IP	IN	PTR	site #add more record --> End_of_IP --> 192.168.56.10 = 10
10- check your code --> rndc reload
11- systemctl restart bind9 and systemctl status bind9
12- test Reverse Zone with --> dig -X IP





# for config a slave to get DNS from master
16- first check time be update in slave and master
17- in ubuntu cat /etc/timezone --> if was Asia/Tehran is goot else:
18- go to /usr/share/zoneinfo and find iran --> cp ./iran /etc/localtime
19- for cent_os check graphically
20- go to database of DNS master ( create in line 5 ) --> increase serial --> then add this under the @	IN	NS	ns1.name_of_zone.	#for webserver :
@	IN	NS	ns2.name_of_zone.	#for webserver
21- add this record --> ns2.name_of_zone.	IN	A	Server_IP	#server_IP of slave
22- config for don't send items for any slaves --> vi named.conf.local --> at the end of zone add this line --> allow-transfer {any; or slave_IP;};
23- check your code --> rndc reload
24- systemctl restart bind9 and systemctl status bind9
25- in Cent_OS vi /etc/named.conf --> change this line :
line 13 : listen-on port 53 {any;};
line 21 : allow-query {any;};
26- after last zone and before includes --> type this :
zone "name" {
type slave;
master {master_IP;};
file "name_of_database";
};
27- systemctl restart named and systemctl status named





# safe the connection between master and slave
28- install openssh-server on ubuntu and Cent_os
29- check /etc/ssh/sshd_config --> line 28 be Permit Root login : yes in ubuntu and Cent_OS
30- if you have change --> systemctl restart sshd
31- test ssh --> ssh root@IP
32- check port and firewall for both system
33- on master --> dnssec-keygen -a HMAC-MD5 -b 128 -n HOST(key for this machine) -r /dev/urandom(random generate) name
34- create 2 key --> one public and one private
35- cat name.key | grep key > ./named.conf.test
36- open the above file and write this:
key "your_name" {
algorithm HMAC-MD5;
secret "the key that we drop to this file in line 36";
};
37- at the last include in /etc/bind/named.conf --> include "/etc/bind/named.conf.test" # introduce your key
38- in /etc/bind/named.conf.local and at the end of your zone --> allow-transfer{key your_name;};
39- scp /etc/bind/named.conf.test root@slave_IP:/root/
40- in slave --> cat /root/named.conf.test >> /etc/named.conf
41- vi /etc/named.conf --> cut the key at the end of file and move it above of options
42- under the key and above of options type :
server master_IP {
keys {key your_name;};
};
43- systemctl restart named and systemctl status named
44- systemctl restart bind9 and systemctl status bind9




Apache2 == httpd 
==============================================================================================================================================
1- for ubuntu --> apt-get install apache2 apache2_utils and for Cent_OS --> yum install httpd mod_ssl
2- /etc/apache2 --> sites-available = config -- sites-enable = symbolic link for active -- ports.conf = config ports
3- /etc/www --> location of html files
4- create a directory in above location and create a test html file at in
5- go to sites-available and get a copy from 000-default by another name
6- vi the copy file --> for two  create two site you can copy all text and paste it at the end ( you should create a directory and html file for second site in line 4 and create a new ip interface in /etc/network/interfaces --> give a copy from interface and change the Ip and change line of auto enp0s?:0  
7- type ip address in line one -- on line --> DocumentRoot /var/www/your_directory
8- go to sites-enable and create a symbolic link (a2ensite name(line 5)) or create with command
9- systemctl restart apache2 -- systemctl reload apache2




# same IP and different port for two site
11- go to /etc/apache2 and vi ports.conf and add this for listen:
listen ip : 8080
listen ip : 8090
12- go to sites-enable and vi name(line 5) and for each site type the ip with port like : 192.168.56.10:8080
13- systemctl restart apache2 -- systemctl reload apache2




# same port and ip and different domain for two site
14- go to sites-enable and vi name(line 5) and for each site type the same ip with same port for two sites 
15- in line 9 --> server name --> uncomment ant type my domain name --> do this f16- now accourding to how create a DNS server --> create a dns server for each site or add its info in /etc/hosts
or another site
17- systemctl restart bind9 and systemctl status bind9
18- go to /etc/apache2 and vi ports.conf and type listen only on port 80
19- systemctl restart apache2 -- systemctl reload apache2





# get username and password for .../secret
20- on /var/www/your_directory create a directory with a name(for example secret) and create a html file in it
21- go to sites-enable and vi name(line 5) and in line 13 and on the bottom of DocumentRoot type this :
<Directory "/var/www/your_directory/secret">
	AuthType	Basic
	AuthName	"a text for display"
	AuthUserFile	/etc/apache2/namepass #for cache your password
	Require	valid-user
</Directory>
22- create password --> htpasswd -c /etc/apache2/namepass username/password
23- systemctl restart apache2 -- systemctl reload apache2





# Redirect
24- on /var/www/your_directory create a directory with a name(for example policy) and create a html file in it
25- go to sites-enable and vi name(line 5) and in line 13 and on the bottom of DocumentRoot type this :
Redirect /secret /policy #if you search secret redirect you to policy
26- systemctl restart apache2 -- systemctl reload apache2





#use certificate for site
27- on Cent_OS --> create a key --> opensslreq -x509 -nodes -days 10(days that valid this key) -newkey RSA-2048 -keyout(private key) /etc/httpd/name.key -out(public key) /etc/httpd/name.crt
28- answer to the questions
29- vi /etc/httpd/conf/httpd.conf -->  in line 42 you can see port listening and on line 119 see source site
30- go to /var/www/html and create a html file
31- vi /etc/httpd/conf.d/ssl.conf --> on line 100 you type public key address and on line 107 type private key address
32- systemctl restart httpd
33- now you can search in your browser https://localhost and see you need certificate





NTP Server
==============================================================================================================================================
1- install NTP --> apt-get install ntp 
2- add your time server in /etc/ntp.conf like this :
server 0.ubuntu.pool.ntp.org iburst
server 1.ubuntu.pool.ntp.org iburst
3- add port on firewall --> ufw allow 123/udp 
4- systemctl restart ntp | systemctl status ntp 
5- check config --> ntpq -p 





Nginx
==============================================================================================================================================
1- install Nginx --> apt-get install nginx
2- on /var/www create 2 directory for 2 site and create 2 html file for each other
3- /etc/nginx --> sites-available = config -- sites-enable = symbolic link for active -- ports.conf = config ports
4- add a new IP on /etc/network/interfaces --> type this :
auto enp0s3:0
iface enp0s3:0 inet static
	address IP
	network 255.255.255.0
5- go to sites-available and create web.conf and type this :
server{
listen IP_device:80;
location / (  # for example google/home --> home is location
root /var/www/your_directory_of_site;
)
}
6- copy above lines for second site
7- go to sites-enable --> ln -s ../sites-available/web.conf .
8- check your command with nginx -t
9- systemctl restart nginx | systemctl status nginx
10- now you can check website





# same IP and different port for two site
11- vi web.conf --> change port and add same IP
12- systemctl restart nginx | systemctl status nginx





# same port and ip and different domain for two site
13- vi web.conf --> add two lines for to part under the listen :
server_name www.name.com;
14- now accourding to how create a DNS server --> create a dns server for each site or add its info in /etc/hosts
15- systemctl restart nginx | systemctl status nginx





# another location (for example /image)
16- create a directory in web site directory in /var/www with name image and create a html file in that
17- vi web.conf --> goo to part of your site and add a new location :
location /image (
root /var/www/your_site;  # dont add /image
)
18- systemctl restart nginx | systemctl status nginx





# Reverse Proxy --> loadbalancing, web acceleration ...
# loadbalancing with weight by different port
19- clear web.conf and type this for eache site but by different port 8080 and 8090 :
server{
listen 8080;
location / (  # for example google/home --> home is location
root /var/www/your_directory_of_site;
)
}
20- nginx -t | systemctl restart nginx | systemctl status nginx and get test for two site
21- vi web.conf and type this :
upstream loadbalancer_name {
servre 127.0.0.1:8080 weight=1; #local host IP and weight
servre 127.0.0.1:8090 weight=2; #local host IP and weight
}
server {
listen 80;
location / ( 
proxy_pass http://loadbalancer_name;
)
}
22- nginx -t | systemctl restart nginx | systemctl status nginx and get test for two site





# loadbalancing with IPHash by different port (calculate the hash of IP and in next request send it to recent server 
23- vi web.conf and type this :
upstream loadbalancer_name {
ip_hash;
servre 127.0.0.1:8080 weight=1; #local host IP and weight
servre 127.0.0.1:8090 weight=2; #local host IP and weight
}
server {
listen 80;
location / ( 
proxy_pass http://loadbalancer_name;
)
}





# Authentication in Nginx
24- in /var/www/your_directory create a directory for save the username password for example Authentication and then create a html file
25- htpasswd -c /etc/nginx/password username -- and then enter the password
26- clear web.conf and type this :
server {
listen 81;
location / ( 
root /var/www/your_directory_of_site;
)
location /authentication (
root /var/www/your_directory_of_site;
allow valid_IP; # IP that it valid to access
deny deny_IP; #IP that it deny to access for example all
auth_basic "enter your text";
auth_basic_user_file /etc/nginx/password;
)
}
27- nginx -t | systemctl restart nginx | systemctl status nginx and get test on browser http://IP:81/authentication





# Download and speed 
28- create a file --> dd if=/dev/zero of=./text.txt bs=500M count=1
29- you can check by addres_web_site/test.txt on browser
30- config speed download --> go to web.conf --> under the root/var/.../site; type this:
limit_rate 1m; #1 mb/s






Routing and firewall
==============================================================================================================================================
1- for enable routing --> echo 1 > /proc/sys/net/ipv4/ip_forward
2- for permanent enabling --> vi /etc/rc.local --> type echo 1 > /proc/sys/net/ipv4/ip_forward
3- show routing table --> route -n 
4- apt-get install iptables_persistent --> for perminant of rules




#Firewall
4- for accept or block or ... packets enter to system use filter and for Redirect or port mapping or ... use NAT
5- type of chain --> Input -- Output -- Forward -- Post Routing -- Pre Routing
6- count of chains of table --> iptable -t filter(or nat or ...) -nL
7- show routing table --> iptables --list-number -nL
8- Roles --> -p = Protocol | -s = source address | -d = destination address | -i inbound interface | -o = outbound interface | -j = jump(reaction) | -A = append | -I = Insert (-A and type of chain must type together)
9- iptables -t filter -A INPUT -s IP_Address -p icmp -j REJECT --> (Reject) IP_Address can't ping me
10- iptables -t filter -I INPUT 1 -s IP_Address -p icmp -j DROP --> (DROP) IP_Address can't ping me (because at above line we reject that, we use insert to append this rule on 1st line)
11- iptables -t filter -D INPUT 2 --> delete line 2 from chain INPUT in filter table
12- iptables -t filter -F --> delete all line from filter table
13- iptables -t filter -A INPUT -s IP_Address -p tcp --destination-port 22 -j REJECT --> IP_Address can't ssh me but can ping me
14- iptables -t filter -A OUTPUT -d IP_Address -j DROP --> I can't send any packet to Address 
15- save rules for peminant --> iptables-save > /etc/iptables/rules.v4




#NAT Server (another machine does't have my ssh port buc it can ssh (Redirect port))
15- vi /etc/ssh/sshd_config and change port (for example 2370)
16- iptables -t nat -A PREROUTING -i enp0s3 -p tcp --dport 22 -j REDIRECT --to-port 2370 # every packet i get on port 22, redirect it on port 2370





#Connect another device to internet by my device
17- set defual-gateway for device and check the connections
18- clear filter and nat tables
19- iptables -t nat --append POSTROUTING --out-interface enp0s8 -j MASQUERADE # ip public that you got it, stick a tag on it and send to internet by enp0s8
20- iptables -t filter -A FORWARD -i enp0s3 -j ACCEPT # if receive a packet from enp0s3, accept it





#enter from public to private
21- check connections
22- on device1 vi /etc/ssh/sshd_config and change ssh port (for example 2580)
23- on device2 vi /etc/ssh/sshd_config and change ssh port (for example 2590)
24- check both devices listen on its port
25- on ubuntu --> iptables -t nat -A PRERROUTING -i enp0s8 -p tcp --destination-port 2222 -j DNAT --to-destination IP_device1:2580 # if receive packet on port 2222, send it to device1 on port 2580
26- on ubuntu --> iptables -t nat -A PRERROUTING -i enp0s8 -p tcp --destination-port 3333 -j DNAT --to-destination IP_device1:2590
27- iptables -t filter -A FORWARD -i enp0s8 -p tcp --destination-port 2580 -j ACCEPT
28- iptables -t filter -A FORWARD -i enp0s8 -p tcp --destination-port 2590 -j ACCEPT
29- now you can ssh to device1 and device2 by device3 that connected to ubuntu but in another network (ssh root@IP_address -p 2222/3333)





LVM --> Logical Volume Manager
==============================================================================================================================================
1- give informations --> pvs | pvdisplay -- lvs | lvdisplay -- vgs | vgdisplay
1- add new hard --> create a new partition --> change type to linux LVM
2- mkfs new partitions
3- add tag pv on partitions --> pv create address_of_your_partitions
4- create vitual group --> vgcreate vg_name address_of_your_partitions
5- create logical volume --> lvcreate --name lv_name --size 3G(for example) vg_name
6- mkfs and mount new partition (lvname)
7- extend a logical volume --> lvextend -L +1G(for example) lv_name(with address)
8- reduce a logical volume --> lvreduce -L -1G(for example) lv_name(with address)
9- extend a virtual group --> vgextend vg_name  /dev/portition you want add
10- for reverse --> firest umount --> for delete logical volume --> lvremove lv_name(with address)
11- for decrease virtual group and free pv --> vgreduce vg_name lv_name(with address)
12- if you want delete last pv, you should delete virtual group --> ngremove vg_name
13- for remove lvm tag from pv --> pvremove /dev/partition then change its type





